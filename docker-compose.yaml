version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: chicago_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - streaming_network

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: chicago_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - streaming_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: chicago_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: chicago_fair
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9093
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - streaming_network

  timescaledb:
    image: timescale/timescaledb:latest-pg15
    container_name: chicago_timescale
    environment:
      POSTGRES_DB: chicago_timeseries
      POSTGRES_USER: timescale
      POSTGRES_PASSWORD: timescale123
    ports:
      - "5433:5432"
    volumes:
      - timescale_data:/var/lib/postgresql/data
      - ./analytics/sql/init_timescale.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - streaming_network

  grafana:
    image: grafana/grafana:latest
    container_name: chicago_grafana
    depends_on:
      - timescaledb
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_INSTALL_PLUGINS: grafana-clock-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./analytics/dashboards/grafana-provisioning:/etc/grafana/provisioning
    networks:
      - streaming_network

volumes:
  timescale_data:
  grafana_data:

networks:
  streaming_network:
    driver: bridge